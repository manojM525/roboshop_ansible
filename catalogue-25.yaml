- name: to setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable present version of nodejs
    ansible.builtin.command: "dnf module diasable nodejs -y"

  - name: enable required version of nodejs
    ansible.builtin.command: "dnf module enable nodejs:18 -y"

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present
  
  - name: create a directory if it doesn't exist to store app info
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download application code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      path: /tmp/catalogue.zip

  - name: unzip the application contents in /app directory
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  
  - name: create a app user
    ansible.builtin.user:
      name: roboshop

  - name: install dependencies
    ansible.builtin.command: "npm install"

  - name: setup to run application as a systemd service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: daemon reload to make it a systemd service
    ansible.builtin.systemd_service:
      name: catalogue
      daemon_reload: true
      state: started
      enabled: true
      
  - name: download mongodb client to load schema into mongodb
    ansible.builtin.copy: 
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: load schema into mongodb
    ansible.builtin.shell: "mongo --host MONGODB-SERVER-IPADDRESS </app/schema/catalogue.js"